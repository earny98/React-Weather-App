{"version":3,"sources":["Components/Card.js","Components/Temp.js","Components/App.js","index.js"],"names":["Card","tempInfo","temp","humidity","pressure","name","weathermood","speed","country","sunset","React","useState","weatherState","setWeatheState","useEffect","date","Date","timeStr","getHours","getMinutes","Fragment","className","toLocaleString","Temp","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","console","log","main","weather","wind","sys","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6bf36b6.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\n\r\nconst Card = ({ tempInfo }) => {\r\n  const {\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    name,\r\n    weathermood,\r\n    speed,\r\n    country,\r\n    sunset,\r\n  } = tempInfo;\r\n  const [weatherState, setWeatheState] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (weathermood) {\r\n      switch (weathermood) {\r\n        case \"Clouds\":\r\n          setWeatheState(\"wi-day-cloudy\");\r\n          break;\r\n        case \"Haze\":\r\n          setWeatheState(\"wi-fog\");\r\n          break;\r\n          case \"Rain\":\r\n          setWeatheState(\"wi-day-rain\");\r\n          break;\r\n        case \"Clear\":\r\n          setWeatheState(\"wi-day-sunny\");\r\n          break;\r\n        case \"Mist\":\r\n          setWeatheState(\"wi-dust\");\r\n          break;\r\n\r\n        default:\r\n          setWeatheState(\"wi-day-sunny\");\r\n          break;\r\n      }\r\n    }\r\n  }, [weathermood]);\r\n    // converting the seconds into time\r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000);\r\n    let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n  return (\r\n    <React.Fragment>\r\n    <article className=\"widget\">\r\n        <div className=\"weatherIcon\">\r\n          <i className={`wi ${weatherState}`}></i>\r\n        </div>\r\n\r\n        <div className=\"weatherInfo\">\r\n          <div className=\"temperature\">\r\n            <span>{temp}&deg;</span>\r\n          </div>\r\n\r\n          <div className=\"description\">\r\n            <div className=\"weatherCondition\">{weathermood}</div>\r\n            <div className=\"place\">{name} , {country}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"date\">{new Date().toLocaleString()}</div>\r\n        {/* our for colom section */}\r\n        <div className=\"extra-temp\">\r\n        <div className=\"temp-info-minmax\">\r\n          <div className=\"two-sided-section\">\r\n            <p>\r\n              <i className={\"wi wi-sunset\"}></i>\r\n            </p>\r\n            <p className=\"extra-info-leftside\">\r\n              {timeStr } <br /> Sunset\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"two-sided-section\">\r\n            <p>\r\n              <i className={\"wi wi-humidity\"}></i>\r\n            </p>\r\n            <p className=\"extra-info-leftside\">\r\n              {humidity} <br /> Humidity\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"weather-extra-info\">\r\n          <div className=\"two-sided-section\">\r\n            <p>\r\n              <i className={\"wi wi-rain\"}></i>\r\n            </p>\r\n            <p className=\"extra-info-leftside\">\r\n              {pressure}\r\n              <br /> Pressure\r\n            </p>\r\n          </div>\r\n          <div className=\"two-sided-section\">\r\n            <p>\r\n              <i className={\"wi wi-strong-wind\"}></i>\r\n            </p>\r\n            <p className=\"extra-info-leftside\">\r\n              {speed}\r\n              <br /> Speed\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </article>\r\n      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./style.css\";\r\n\r\nconst Temp = () => {\r\n  const [searchValue, setSearchValue] = useState(\"mumbai\");\r\n  const [tempInfo, setTempInfo] = useState([]);\r\n\r\n  const getWeatherInfo = async () => {\r\n    try {\r\n      let url = `http://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=0d30a2ca4d9c2ffeace1145b6eb3a199`;\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      console.log(data);\r\n\r\n      const {temp,humidity,pressure} = data.main;\r\n      const { main: weathermood} = data.weather[0];\r\n      const {name} = data;\r\n      const {speed} = data.wind;\r\n      const {country, sunset} = data.sys;\r\n\r\n      const myWeatherData = {\r\n          temp,\r\n          humidity,\r\n          pressure,\r\n          name,\r\n          weathermood,\r\n          speed,\r\n          country,\r\n          sunset,\r\n      }\r\n      setTempInfo(myWeatherData);\r\n    } catch {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search...\"\r\n            autoFocus\r\n            id=\"search\"\r\n            className=\"searchTerm\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"searchButton\"\r\n            type=\"button\"\r\n            onClick={getWeatherInfo}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* Card */}\r\n      \r\n      <Card tempInfo={tempInfo}/>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Temp;\r\n","import Temp from \"./Temp\";\n\nfunction App() {\n  return (\n    <div >\n      <Temp />\n    </div>\n  );\n}\n\nexport default App;\n\n//0d30a2ca4d9c2ffeace1145b6eb3a199","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}